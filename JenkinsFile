pipeline {
    agent any

    environment {
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        DOCKER_HUB_REPO = "saravana2002/devops-task"
        AWS_REGION = "ap-south-1"
        ECS_CLUSTER = "adq-ecs-cluster"
        ECS_SERVICE = "adq-service"
        TASK_FAMILY = "adq-task"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/SaravanaNani/devops-task.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_HUB_REPO}:${IMAGE_TAG} .
                """
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', 
                                                 usernameVariable: 'DOCKER_USER', 
                                                 passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker push ${DOCKER_HUB_REPO}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Update ECS Task Definition') {
            steps {
                withAWS(region: "${AWS_REGION}", credentials: 'aws-jenkins-role') {
                    sh """
                        # Get current task definition JSON
                        aws ecs describe-task-definition --task-definition ${TASK_FAMILY} > task-def.json
                        
                        # Replace the container image with the new image
                        cat task-def.json | \
                          jq --arg IMG "${DOCKER_HUB_REPO}:${IMAGE_TAG}" '.taskDefinition.containerDefinitions[0].image = $IMG' > new-task-def.json
                        
                        # Register new task definition
                        NEW_REVISION=$(aws ecs register-task-definition \
                          --cli-input-json file://new-task-def.json \
                          --query 'taskDefinition.taskDefinitionArn' --output text)
                        
                        echo "New task definition ARN: $NEW_REVISION"
                        
                        # Update ECS service with the new task definition
                        aws ecs update-service \
                          --cluster ${ECS_CLUSTER} \
                          --service ${ECS_SERVICE} \
                          --task-definition $NEW_REVISION \
                          --force-new-deployment
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Deployment completed successfully! üéâ"
        }
        failure {
            echo "Pipeline failed ‚ùå"
        }
    }
}
